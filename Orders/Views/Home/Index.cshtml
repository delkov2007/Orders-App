@model Orders.Models.PagedFilteredSortedResult<ItemModel>
@using Microsoft.AspNetCore.Routing
@{
    ViewData["Title"] = "Home Page";
}
@{

    string ForgeSortDir(string sortBy)
    {
        return Model.SortBy == sortBy && Model.SortDir == "asc" ? "desc" : "asc";
    }

    string CheckSortBySortDir(string sortBy, string sortDir, string criteria)
    {
        var arrowImgLink = "";

        if (sortBy.ToLower() == criteria && sortDir.ToLower() == "asc")
        {
            arrowImgLink = "src=https://img.icons8.com/fluent/20/000000/sort-up.png";
        }
        else if (sortBy.ToLower() == criteria && sortDir.ToLower() == "desc")
        {
            arrowImgLink = "src=https://img.icons8.com/fluent/20/000000/sort-down.png";
        }


        return arrowImgLink;

    }

    var startIndex = 1;


    int[] pages = new int[] { 5, 10, 20, 50 };
}

<div class="m-2 container">
    <div class="container">
        <div class="row">
            <div class="col-8">
                <img src="https://i.pinimg.com/564x/95/9e/d9/959ed90adbf5056562ca3b6f020ce27c.jpg"
                     style="display: inline;
                    width: 10%;"
                     alt="Computer components list" />
                <h1 style="display: inline; padding:10px; margin-left:4px" class="text-black-50 align-bottom">Computer components list</h1>
            </div>

        </div>
    </div>
    <hr />
    <div class="container">
        <div class="row">
            <div class="col-auto mr-auto p-1">
                <form class="form-inline" action="/" method="post">
                    @Html.HiddenFor(x => x.SortBy)
                    @Html.HiddenFor(x => x.SortDir)
                    @Html.HiddenFor(x => x.ItemsPerPage)
                    @Html.HiddenFor(x => x.CurrentPage)
                    <div class="input-group mb-2 mr-sm-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text">Search</div>
                        </div>
                        <input class="form-control" type="text" name="filterValue" value="@Model.FilterValue" placeholder="Filter" />
                        <button class="btn btn-outline-info d-inline-flex" type="submit">Search</button>
                    </div>
                </form>
                <form class="form-inline" action="/" method="get">
                    <button class="btn btn-sm btn-danger" @(string.IsNullOrEmpty(Model.FilterValue) ? "hidden" : "")>Clear Filter</button>
                </form>
            </div>
            <div class="col-auto">
                <a href="/home/iteminfo" class="btn btn-outline-info">Add new Item</a>
            </div>
        </div>
    </div>

    <table class="table table-hover">
        <thead>
            <tr>
                <th></th>
                <th scope="col">
                    <a href="/Home/Index?sortBy=id&sortDir=@ForgeSortDir("id")&filterValue=@Model.FilterValue">
                        ID
                        <img @CheckSortBySortDir(Model.SortBy, Model.SortDir, "id") />
                    </a>
                </th>
                <th scope="col">
                    <a href="/Home/Index?sortBy=productcode&sortDir=@ForgeSortDir("productcode")&filterValue=@Model.FilterValue">
                        Product Code
                        <img @CheckSortBySortDir(Model.SortBy, Model.SortDir, "productcode") />
                    </a>
                </th>
                <th scope="col">
                    <a href="/Home/Index?sortBy=name&sortDir=@ForgeSortDir("name")&filterValue=@Model.FilterValue">
                        Name
                        <img @CheckSortBySortDir(Model.SortBy, Model.SortDir, "name") />
                    </a>
                </th>
                <th scope="col">
                    <a href="/Home/Index?sortBy=quantity&sortDir=@ForgeSortDir("quantity")&filterValue=@Model.FilterValue">
                        Quantity
                        <img @CheckSortBySortDir(Model.SortBy, Model.SortDir, "quantity") />
                    </a>
                </th>
                <th scope="col">
                    <a href="/Home/Index?sortBy=price&sortDir=@ForgeSortDir("price")&filterValue=@Model.FilterValue">
                        Price
                        <img @CheckSortBySortDir(Model.SortBy, Model.SortDir, "price") />
                    </a>
                </th>
                <th scope="col">Image</th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model.Items)
        {
            var selectedElementIndex = Model.Items.ToList().FindIndex(x => x.ID.Contains(item.ID));
            selectedElementIndex = selectedElementIndex >= Model.ItemsPerPage
                ? selectedElementIndex - (Model.CurrentPage - 1) * Model.ItemsPerPage
                : selectedElementIndex;



            <tbody>
                <tr class="table-primary">
                    @if (Model.CurrentElementIndex == null || selectedElementIndex != int.Parse(Model.CurrentElementIndex))
                    {
                        <td></td>
                        <td scope="row">@item.ID</td>
                        <td>@item.ProductCode</td>
                        <td>@item.Name</td>
                        <td>@item.Quantity</td>
                        <td>@item.Price</td>
                        <td><img height="24" width="24" src="@item.Image" /></td>
                        <td>
                            <a href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue&currentline=@selectedElementIndex"
                               class="btn btn-group-sm btn-outline-light">
                                Inline Edit
                            </a>
                            <a href="/home/iteminfo?id=@item.ID" class="btn btn-group-sm btn-outline-light">Edit</a>
                            <a href="/home/delete?id=@item.ID" class="btn btn-group-sm btn-outline-danger">Delete</a>
                        </td>
                    }
                    else
                    {
                        <partial name="InlineEdit" />
                    }


                </tr>
            </tbody>

        }

    </table>
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-4">
                <span>Export to</span>
                <a href="/home/export?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@Model.ItemsPerPage&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue">
                    <img src="https://img.icons8.com/color/20/000000/export-excel.png" />
                </a>
            </div>

        </div>

    </div>

    <hr />
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-4 p-0">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage==1 ? "disabled" : "")">
                        <a class="page-link"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@Model.ItemsPerPage&currentPage=@(Model.CurrentPage-1)&filterValue=@Model.FilterValue">Previous</a>
                    </li>
                    
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a asp-route-sortby="@Model.SortBy"
                               asp-route-sortdir="@Model.SortDir"
                               asp-route-currentpage="@i"
                               asp-route-itemsperpage="@Model.ItemsPerPage"
                               asp-route-filterValue="@Model.FilterValue"
                               class="page-link">@i</a>
                        </li>
                    }
                    
                    <li class="page-item @(Model.CurrentPage>=Model.TotalPages? "disabled" : "")">
                        <a class="page-link"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@Model.ItemsPerPage&currentPage=@(Model.CurrentPage+1)&filterValue=@Model.FilterValue">Next</a>
                    </li>
                </ul>
            </div>
            <div>
                <div class="dropdown">
                    <button class="btn btn-info dropdown-toggle"
                            type="button" id="dropdownMenuButton"
                            data-toggle="dropdown"
                            aria-haspopup="true"
                            aria-expanded="false"
                            style="background-color: #007bff; border-color: #007bff;">
                        Select Pages
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@pages[0]&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue">5</a>
                        <a class="dropdown-item"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@pages[1]&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue">10</a>
                        <a class="dropdown-item"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@pages[2]&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue">20</a>
                        <a class="dropdown-item"
                           href="/home/index?sortBy=@Model.SortBy&sortDir=@Model.SortDir&itemsPerPage=@pages[3]&currentPage=@Model.CurrentPage&filterValue=@Model.FilterValue">50</a>

                    </div>
                </div>
            </div>
        </div>
    </div>


</div>





